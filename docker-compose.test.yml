---
services:
  redis:
    networks:
      - redis-network
    command:
      - redis-server
      - "--appendonly"
      - "yes"
      - "--requirepass ${REDIS_PASSWORD}"
    image: redis
    container_name: resonate-redis
    restart: always

    expose:
      - 6379
    ports:
      - "${REDIS_PORT}:6379"

  api:
    networks:
      - api-network
      - redis-network
    build: .
    command: /bin/sh -c "yarn && yarn migrate:test && yarn start:dev"
    container_name: resonate-api
    environment:
      - NODE_ENV=test
    depends_on:
      - redis
      - pgsql-test
    ports:
      - "4000:4000"
    restart: always
    volumes:
      - ./:/var/www/api
      - ./data/media/incoming:/data/media/incoming
      - ./data/media/audio:/data/media/audio
      - ./data/media/images:/data/media/images

  pgsql-test:
    image: postgres:14-alpine
    env_file:
      - .env
    volumes:
      - ./data/pgsql-test:/var/lib/postgresql/data
      - ./data/pgsql-test-backups:/backups
    container_name: resonate-pgsql-test
    # networks:
    #   api-network:
    #     aliases:
    #       - pgsql-test
    networks:
      - api-network
      # - redis-network
    ports:
      - '${POSTGRES_TEST_LOCAL_MACHINE_PORT}:5432'
  nginx:
    restart: always
    container_name: resonate-nginx
    networks:
      - api-network
    build:
      context: ./nginx
    ports:
      - "${NGINX_PORT}:80"

networks:
  api-network:
    driver: bridge
  # app-network:
  #   driver: bridge
  redis-network:
    driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  htpasswd:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/htpasswd/"
      o: bind
  web-root:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/public/"
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: "${PWD}/dhparam/"
      o: bind

version: "3.7"
